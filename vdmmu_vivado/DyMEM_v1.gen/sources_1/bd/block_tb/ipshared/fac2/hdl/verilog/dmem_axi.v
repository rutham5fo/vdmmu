// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dmem_axi_dmem_axi,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.978000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=166,HLS_SYN_LUT=218,HLS_VERSION=2023_2}" *)

module dmem_axi (
        i_heap_full,
        i_rep_ack,
        i_rep_trans_id,
        o_reset_n,
        o_reset_n_ap_vld,
        o_req_valid,
        o_req_valid_ap_vld,
        o_req_type,
        o_req_type_ap_vld,
        o_req_bytes,
        o_req_bytes_ap_vld,
        o_req_trans_id,
        o_req_trans_id_ap_vld,
        s_axi_DMEM_ctrl_AWVALID,
        s_axi_DMEM_ctrl_AWREADY,
        s_axi_DMEM_ctrl_AWADDR,
        s_axi_DMEM_ctrl_WVALID,
        s_axi_DMEM_ctrl_WREADY,
        s_axi_DMEM_ctrl_WDATA,
        s_axi_DMEM_ctrl_WSTRB,
        s_axi_DMEM_ctrl_ARVALID,
        s_axi_DMEM_ctrl_ARREADY,
        s_axi_DMEM_ctrl_ARADDR,
        s_axi_DMEM_ctrl_RVALID,
        s_axi_DMEM_ctrl_RREADY,
        s_axi_DMEM_ctrl_RDATA,
        s_axi_DMEM_ctrl_RRESP,
        s_axi_DMEM_ctrl_BVALID,
        s_axi_DMEM_ctrl_BREADY,
        s_axi_DMEM_ctrl_BRESP,
        ap_clk,
        ap_rst_n
);

parameter    C_S_AXI_DMEM_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_DMEM_CTRL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_DMEM_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input  [0:0] i_heap_full;
input  [0:0] i_rep_ack;
input  [7:0] i_rep_trans_id;
output  [0:0] o_reset_n;
output   o_reset_n_ap_vld;
output  [0:0] o_req_valid;
output   o_req_valid_ap_vld;
output  [0:0] o_req_type;
output   o_req_type_ap_vld;
output  [31:0] o_req_bytes;
output   o_req_bytes_ap_vld;
output  [7:0] o_req_trans_id;
output   o_req_trans_id_ap_vld;
input   s_axi_DMEM_ctrl_AWVALID;
output   s_axi_DMEM_ctrl_AWREADY;
input  [C_S_AXI_DMEM_CTRL_ADDR_WIDTH - 1:0] s_axi_DMEM_ctrl_AWADDR;
input   s_axi_DMEM_ctrl_WVALID;
output   s_axi_DMEM_ctrl_WREADY;
input  [C_S_AXI_DMEM_CTRL_DATA_WIDTH - 1:0] s_axi_DMEM_ctrl_WDATA;
input  [C_S_AXI_DMEM_CTRL_WSTRB_WIDTH - 1:0] s_axi_DMEM_ctrl_WSTRB;
input   s_axi_DMEM_ctrl_ARVALID;
output   s_axi_DMEM_ctrl_ARREADY;
input  [C_S_AXI_DMEM_CTRL_ADDR_WIDTH - 1:0] s_axi_DMEM_ctrl_ARADDR;
output   s_axi_DMEM_ctrl_RVALID;
input   s_axi_DMEM_ctrl_RREADY;
output  [C_S_AXI_DMEM_CTRL_DATA_WIDTH - 1:0] s_axi_DMEM_ctrl_RDATA;
output  [1:0] s_axi_DMEM_ctrl_RRESP;
output   s_axi_DMEM_ctrl_BVALID;
input   s_axi_DMEM_ctrl_BREADY;
output  [1:0] s_axi_DMEM_ctrl_BRESP;
input   ap_clk;
input   ap_rst_n;

wire   [7:0] i_reset;
wire   [7:0] i_req_valid;
wire   [7:0] i_req_type;
wire   [31:0] i_req_bytes;
wire   [7:0] i_req_trans_id;
wire    o_rep_trans_id_ap_vld;
wire   [7:0] o_rep_ack;
wire    o_rep_ack_ap_vld;
wire   [7:0] o_heap_full;
wire    o_heap_full_ap_vld;
 reg    ap_rst_n_inv;
wire   [0:0] trunc_ln29_fu_195_p1;

dmem_axi_DMEM_ctrl_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_DMEM_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_DMEM_CTRL_DATA_WIDTH ))
DMEM_ctrl_s_axi_U(
    .AWVALID(s_axi_DMEM_ctrl_AWVALID),
    .AWREADY(s_axi_DMEM_ctrl_AWREADY),
    .AWADDR(s_axi_DMEM_ctrl_AWADDR),
    .WVALID(s_axi_DMEM_ctrl_WVALID),
    .WREADY(s_axi_DMEM_ctrl_WREADY),
    .WDATA(s_axi_DMEM_ctrl_WDATA),
    .WSTRB(s_axi_DMEM_ctrl_WSTRB),
    .ARVALID(s_axi_DMEM_ctrl_ARVALID),
    .ARREADY(s_axi_DMEM_ctrl_ARREADY),
    .ARADDR(s_axi_DMEM_ctrl_ARADDR),
    .RVALID(s_axi_DMEM_ctrl_RVALID),
    .RREADY(s_axi_DMEM_ctrl_RREADY),
    .RDATA(s_axi_DMEM_ctrl_RDATA),
    .RRESP(s_axi_DMEM_ctrl_RRESP),
    .BVALID(s_axi_DMEM_ctrl_BVALID),
    .BREADY(s_axi_DMEM_ctrl_BREADY),
    .BRESP(s_axi_DMEM_ctrl_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .i_reset(i_reset),
    .i_req_valid(i_req_valid),
    .i_req_type(i_req_type),
    .i_req_bytes(i_req_bytes),
    .i_req_trans_id(i_req_trans_id),
    .o_rep_trans_id(i_rep_trans_id),
    .o_rep_trans_id_ap_vld(o_rep_trans_id_ap_vld),
    .o_rep_ack(o_rep_ack),
    .o_rep_ack_ap_vld(o_rep_ack_ap_vld),
    .o_heap_full(o_heap_full),
    .o_heap_full_ap_vld(o_heap_full_ap_vld)
);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign trunc_ln29_fu_195_p1 = i_reset[0:0];

assign o_heap_full = i_heap_full;

assign o_heap_full_ap_vld = 1'b1;

assign o_rep_ack = i_rep_ack;

assign o_rep_ack_ap_vld = 1'b1;

assign o_rep_trans_id_ap_vld = 1'b1;

assign o_req_bytes = i_req_bytes;

assign o_req_bytes_ap_vld = 1'b1;

assign o_req_trans_id = i_req_trans_id;

assign o_req_trans_id_ap_vld = 1'b1;

assign o_req_type = i_req_type[0:0];

assign o_req_type_ap_vld = 1'b1;

assign o_req_valid = i_req_valid[0:0];

assign o_req_valid_ap_vld = 1'b1;

assign o_reset_n = (trunc_ln29_fu_195_p1 ^ 1'd1);

assign o_reset_n_ap_vld = 1'b1;

endmodule //dmem_axi
